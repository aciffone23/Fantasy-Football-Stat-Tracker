/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"playerModal\": function() { return /* binding */ playerModal; }\n/* harmony export */ });\n/* harmony import */ var _src_scripts_filter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/scripts/filter.js */ \"./src/scripts/filter.js\");\n/* harmony import */ var _src_scripts_lineChart_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/scripts/lineChart.js */ \"./src/scripts/lineChart.js\");\n\n\nconst {\n  topPlayerWeeklyData,\n  searchPlayerByName,\n  getPlayerNames,\n  displayPlayerStats,\n  sortAndFilterByPosition\n} = _src_scripts_filter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nvar searchedPlayers = [];\nfunction getAndDisplayPlayerNames(selectedWeek, selectedPosition) {\n  let playerNamesFilter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  getPlayerNames(selectedWeek).then(playerData => {\n    let filteredPlayerData = playerData;\n    if (playerNamesFilter) {\n      filteredPlayerData = playerData.filter(f => playerNamesFilter.includes(f.player_name));\n    }\n    const filteredPlayers = sortAndFilterByPosition(filteredPlayerData, selectedPosition);\n    displayPlayerStats(filteredPlayers);\n  });\n}\nfunction filterButtonEventListener() {\n  const weekSelect = document.getElementById('filter-by-week');\n  const positionSelect = document.getElementById('filter-by-position');\n  const selectedWeek = weekSelect.value;\n  const selectedPosition = positionSelect.value;\n  if (searchedPlayers.length === 0) {\n    getAndDisplayPlayerNames(selectedWeek, selectedPosition);\n  } else {\n    const searchedNames = searchedPlayers.map(f => f.player_name);\n    getAndDisplayPlayerNames(selectedWeek, selectedPosition, searchedNames);\n  }\n}\nfunction submitSearchEventListener(event) {\n  event.preventDefault();\n  const searchInput = document.getElementById(\"search-player-input\");\n  const playerName = searchInput.value;\n  const loadingGif = document.getElementById('loading-gif');\n  getPlayerNames(\"total\").then(playerData => {\n    searchedPlayers = searchPlayerByName(playerData, playerName);\n    displayPlayerStats(searchedPlayers);\n  });\n  searchInput.value = playerName;\n}\nfunction resetSearchEventListener() {\n  const searchInput = document.getElementById(\"search-player-input\");\n  searchInput.value = '';\n  searchedPlayers = [];\n  getPlayerNames(\"total\").then(playerData => {\n    displayPlayerStats(playerData);\n  });\n}\nfunction showModalInfo() {\n  const modal = document.createElement('div');\n  modal.classList.add('modal', 'show');\n  modal.innerHTML = `\n        <div class=\"modal-content info-modal-content\">\n            <h1>Welcome to Performance Playbook</h1>\n            <p> Use the search bar to find a player by name.</p>\n            <p> Use the filter dropdowns to get a search by week and position.</p>\n            <p> Click the Filter button to see the results sorted by fantasy points.</p>\n            <p> The results will be displayed below the filter dropdowns.</p>\n            <p> The reset button clears the search to reload the data. </p>\n            <p> Click on a players name to get a more detailed view of his stats. </p>\n            <p> You can click on the legend circles in the Season Stats graph to toggle the stats.</p>\n            <span id=\"close-modal\" class=\"close\">&times;</span>\n        </div>\n    `;\n  document.body.appendChild(modal);\n  const closeModalBtn = document.getElementById('close-modal');\n  closeModalBtn.addEventListener('click', () => {\n    modal.classList.remove('show');\n    modal.remove();\n  });\n}\ndocument.addEventListener('DOMContentLoaded', () => {\n  // resetSearchEventListener();\n  filterButtonEventListener();\n  document.getElementById('filter-button').addEventListener('click', filterButtonEventListener);\n  document.getElementById(\"search-player\").addEventListener(\"submit\", submitSearchEventListener);\n  document.getElementById(\"reset-button\").addEventListener(\"click\", resetSearchEventListener);\n  document.getElementById(\"info-modal\").addEventListener(\"click\", showModalInfo);\n  showModalInfo();\n});\nfunction playerModal(player) {\n  const modal = document.getElementById(\"player-modal\");\n  modal.classList.add('player-modal');\n  const modalContent = modal.querySelector(\".modal-content\");\n  let categoryHTML = '';\n  const teamLogoPath = `imgs/${player.team}.png`;\n  const topPlayerPositionData = topPlayerWeeklyData.map(weekData => {\n    return {\n      week: weekData[player.position].week,\n      value: weekData[player.position].value\n    };\n  });\n  const dataset = player.weekData;\n  if (player.position === 'QB') {\n    categoryHTML = `\n        <tr>\n            <th colspan=\"3\">Passing</th>\n        </tr>\n        <tr>\n            <th>Yds</th>\n            <th>Tds</th>\n            <th>Ints</th>\n        </tr>\n        <tr>\n            <td>${player.stats.passing.passing_yds}</td>\n            <td>${player.stats.passing.passing_td}</td>\n            <td>${player.stats.passing.int}</td>\n        </tr>\n        <tr>\n            <th colspan=\"3\">Rushing</th>\n        </tr>\n        <tr>\n            <th>Atts</th>\n            <th>Yds</th>\n            <th>Tds</th>\n        </tr>\n        <tr>\n            <td>${player.stats.rushing.rushing_att}</td>\n            <td>${player.stats.rushing.rushing_yds}</td>\n            <td>${player.stats.rushing.rushing_td}</td>\n        </tr>`;\n  } else if (['WR', 'RB', 'TE'].includes(player.position)) {\n    categoryHTML = `\n        <tr>\n            <th colspan=\"3\">Rushing</th>\n        </tr>\n        <tr>\n            <th>Atts</th>\n            <th>Yds</th>\n            <th>Tds</th>\n        </tr>\n        <tr>\n            <td>${player.stats.rushing.rushing_att}</td>\n            <td>${player.stats.rushing.rushing_yds}</td>\n            <td>${player.stats.rushing.rushing_td}</td>\n        </tr>\n        <tr>\n            <th colspan=\"3\">Receiving</th>\n        </tr>\n        <tr>\n            <th>Rec</th>\n            <th>Yds</th>\n            <th>Tds</th>\n        </tr>\n        <tr>\n            <td>${player.stats.receiving.receptions}</td>\n            <td>${player.stats.receiving.receiving_yds}</td>\n            <td>${player.stats.receiving.receiving_td}</td>\n        </tr>`;\n  }\n  modalContent.innerHTML = `\n    <span class=\"close\">&times;</span>\n    <div class=\"modal-player-info\">\n        <div>\n            <h1>${player.player_name}</h1>\n            <br>\n            <strong>Position:</strong> <span>${player.position}</span>\n            <br>\n            <strong>Fantasy Points:</strong> <span>${player.fantasy_points.ppr.toFixed(2)}</span>\n        </div>\n        <div>\n            <img src=\"${teamLogoPath}\" alt=\"${player.team} Logo\">\n        </div>\n    </div>\n    <br>\n    <div id=\"line-chart-container\"></div>\n    <div class=\"stat-container\">\n        <table class=\"modal-stats-table\">\n            ${categoryHTML}\n        </table>\n    </div>\n    `;\n  const lineChartContainer = document.getElementById(\"line-chart-container\");\n  (0,_src_scripts_lineChart_js__WEBPACK_IMPORTED_MODULE_1__.lineChart)(dataset, topPlayerPositionData);\n  modal.style.display = \"block\";\n  const closeButton = modal.querySelector(\".close\");\n  closeButton.onclick = function () {\n    modal.style.display = \"none\";\n  };\n  window.onclick = function (event) {\n    if (event.target === modal) {\n      modal.style.display = \"none\";\n    }\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/filter.js":
/*!*******************************!*\
  !*** ./src/scripts/filter.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"topPlayerWeeklyData\": function() { return /* binding */ topPlayerWeeklyData; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.js */ \"./src/index.js\");\n\nvar allSeasonData = [];\nvar topPlayerWeeklyData = [];\n\n//filter players by name and return array\nfunction searchPlayerByName(playerData, playerName) {\n  return playerData.filter(player => {\n    let fullName = player.player_name.toLowerCase();\n    return fullName.includes(playerName.toLowerCase());\n  });\n}\n\n//fetch all data from season\nasync function getSeasonData() {\n  // let topPlayerWeeklyData = [];\n  let position = [\"QB\", \"RB\", \"WR\", \"TE\"];\n  const seasonData = [];\n  for (let w = 1; w <= 17; w++) {\n    let topPlayersByWeek = {\n      QB: {\n        week: w,\n        value: 0\n      },\n      RB: {\n        week: w,\n        value: 0\n      },\n      WR: {\n        week: w,\n        value: 0\n      },\n      TE: {\n        week: w,\n        value: 0\n      }\n    };\n    const weekApiUrl = `https://www.fantasyfootballdatapros.com/api/players/2019/${w}`;\n    const weekData = await fetch(weekApiUrl).then(response => response.json());\n    weekData.forEach(weekPlayer => {\n      //check if player is already in season data if so add stats to exist data\n      const seasonPlayer = seasonData.find(p => p.player_name === weekPlayer.player_name);\n      let currentPlayerPts = weekPlayer.fantasy_points.ppr;\n      let fixedPts = weekPlayer.fantasy_points.ppr.toFixed(2);\n      const weekData = {\n        week: w,\n        value: fixedPts\n      };\n      if (position.includes(weekPlayer.position) && currentPlayerPts >= topPlayersByWeek[weekPlayer.position].value) {\n        topPlayersByWeek[weekPlayer.position].value = fixedPts;\n      }\n      if (seasonPlayer) {\n        seasonPlayer.fantasy_points.ppr += weekPlayer.fantasy_points.ppr;\n        seasonPlayer.stats.passing.passing_yds += weekPlayer.stats.passing.passing_yds;\n        seasonPlayer.stats.passing.passing_td += weekPlayer.stats.passing.passing_td;\n        seasonPlayer.stats.passing.int += weekPlayer.stats.passing.int;\n        seasonPlayer.stats.rushing.rushing_att += weekPlayer.stats.rushing.rushing_att;\n        seasonPlayer.stats.rushing.rushing_yds += weekPlayer.stats.rushing.rushing_yds;\n        seasonPlayer.stats.rushing.rushing_td += weekPlayer.stats.rushing.rushing_td;\n        seasonPlayer.stats.receiving.receptions += weekPlayer.stats.receiving.receptions;\n        seasonPlayer.stats.receiving.receiving_yds += weekPlayer.stats.receiving.receiving_yds;\n        seasonPlayer.stats.receiving.receiving_td += weekPlayer.stats.receiving.receiving_td;\n        seasonPlayer.weekData.push(weekData);\n      } else {\n        weekPlayer.weekData = [weekData];\n        seasonData.push(weekPlayer);\n      }\n    });\n    topPlayerWeeklyData.push(topPlayersByWeek);\n  }\n  allSeasonData = seasonData;\n  topPlayerWeeklyData = topPlayerWeeklyData;\n  return seasonData;\n}\n\n//fetch data for week or season\nasync function getPlayerNames(week) {\n  if (week === 'total') {\n    const seasonData = await getSeasonData();\n    topPlayerWeeklyData = [];\n    return sortAndFilterByPosition(seasonData, 'All');\n  } else {\n    const apiUrl = `https://www.fantasyfootballdatapros.com/api/players/2019/${week}`;\n    return fetch(apiUrl).then(response => response.json());\n  }\n}\n//display stats in table\nfunction displayPlayerStats(filteredPlayers) {\n  //create table add class player-stats-table\n  const table = document.createElement('table');\n  table.classList.add('player-stats-table');\n  const tableHeader = table.createTHead();\n  const tableHeaderRow = tableHeader.insertRow();\n  const tableHeaderCells = ['Player Name', 'Position', 'Fantasy Points (PPR)', 'Passing Yards', 'Passing TDs', 'Interceptions', 'Rushing Attempts', 'Rushing Yards', 'Rushing TDs', 'Receptions', 'Receiving Yards', 'Receiving TDs'];\n  for (let i = 0; i < tableHeaderCells.length; i++) {\n    const cell = document.createElement('th');\n    cell.textContent = tableHeaderCells[i];\n    tableHeaderRow.appendChild(cell);\n  }\n  //create body for the table with player stats\n  const tableBody = table.createTBody();\n  filteredPlayers.forEach(player => {\n    const row = tableBody.insertRow();\n    const cells = [player.player_name, player.position, player.fantasy_points.ppr.toFixed(2), player.stats.passing.passing_yds, player.stats.passing.passing_td, player.stats.passing.int, player.stats.rushing.rushing_att, player.stats.rushing.rushing_yds, player.stats.rushing.rushing_td, player.stats.receiving.receptions, player.stats.receiving.receiving_yds, player.stats.receiving.receiving_td];\n    for (let i = 0; i < cells.length; i++) {\n      const cell = row.insertCell();\n      cell.textContent = cells[i];\n    }\n    row.cells[0].classList.add(\"player-name-cell\");\n    row.cells[0].style.cursor = \"pointer\";\n    row.cells[0].addEventListener(\"click\", () => (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.playerModal)(allSeasonData.find(f => f.player_name === player.player_name)));\n    let currentFantasy = Number(row.cells[2].textContent);\n    if (currentFantasy > 350) {\n      row.cells[2].classList.add(\"best\");\n    } else if (currentFantasy > 310 && currentFantasy < 350) {\n      row.cells[2].classList.add(\"vgood\");\n    } else if (currentFantasy > 270 && currentFantasy < 310) {\n      row.cells[2].classList.add(\"pgood\");\n    } else if (currentFantasy > 230 && currentFantasy < 270) {\n      row.cells[2].classList.add(\"good\");\n    } else if (currentFantasy > 190 && currentFantasy < 230) {\n      row.cells[2].classList.add(\"alright\");\n    } else if (currentFantasy > 150 && currentFantasy < 190) {\n      row.cells[2].classList.add(\"okay\");\n    } else if (currentFantasy > 110 && currentFantasy < 150) {\n      row.cells[2].classList.add(\"notgood\");\n    } else if (currentFantasy > 70 && currentFantasy < 110) {\n      row.cells[2].classList.add(\"bad\");\n    }\n    let currentPassingYds = Number(row.cells[3].textContent);\n    if (currentPassingYds > 5000) {\n      row.cells[3].classList.add(\"best\");\n    } else if (currentPassingYds > 4650 && currentPassingYds < 5000) {\n      row.cells[3].classList.add(\"vgood\");\n    } else if (currentPassingYds > 4300 && currentPassingYds < 4650) {\n      row.cells[3].classList.add(\"pgood\");\n    } else if (currentPassingYds > 3950 && currentPassingYds < 4300) {\n      row.cells[3].classList.add(\"good\");\n    } else if (currentPassingYds > 3600 && currentPassingYds < 3950) {\n      row.cells[3].classList.add(\"alright\");\n    } else if (currentPassingYds > 3250 && currentPassingYds < 3600) {\n      row.cells[3].classList.add(\"okay\");\n    } else if (currentPassingYds > 2900 && currentPassingYds < 3250) {\n      row.cells[3].classList.add(\"notgood\");\n    } else if (currentPassingYds > 2490 && currentPassingYds < 2900) {\n      row.cells[3].classList.add(\"bad\");\n    }\n    let currentPassingTds = Number(row.cells[4].textContent);\n    if (currentPassingTds >= 36) {\n      row.cells[4].classList.add(\"best\");\n    } else if (currentPassingTds >= 13 && currentPassingTds < 36) {\n      row.cells[4].classList.add(\"vgood\");\n    } else if (currentPassingTds >= 30 && currentPassingTds < 13) {\n      row.cells[4].classList.add(\"pgood\");\n    } else if (currentPassingTds >= 27 && currentPassingTds < 30) {\n      row.cells[4].classList.add(\"good\");\n    } else if (currentPassingTds >= 24 && currentPassingTds < 27) {\n      row.cells[4].classList.add(\"alright\");\n    } else if (currentPassingTds >= 21 && currentPassingTds < 24) {\n      row.cells[4].classList.add(\"okay\");\n    } else if (currentPassingTds >= 18 && currentPassingTds < 21) {\n      row.cells[4].classList.add(\"notgood\");\n    } else if (currentPassingTds >= 15 && currentPassingTds < 18) {\n      row.cells[4].classList.add(\"bad\");\n    }\n    let currrentPlayerInts = Number(row.cells[5].textContent);\n    console.log(player.player_name, currrentPlayerInts);\n    if (currrentPlayerInts >= 4 && currrentPlayerInts < 6) {\n      row.cells[5].classList.add(\"best\");\n    } else if (currrentPlayerInts >= 6 && currrentPlayerInts < 8) {\n      row.cells[5].classList.add(\"vgood\");\n    } else if (currrentPlayerInts >= 8 && currrentPlayerInts < 10) {\n      row.cells[5].classList.add(\"pgood\");\n    } else if (currrentPlayerInts >= 10 && currrentPlayerInts < 12) {\n      row.cells[5].classList.add(\"good\");\n    } else if (currrentPlayerInts >= 12 && currrentPlayerInts < 14) {\n      row.cells[5].classList.add(\"alright\");\n    } else if (currrentPlayerInts >= 14 && currrentPlayerInts < 16) {\n      row.cells[5].classList.add(\"okay\");\n    } else if (currrentPlayerInts >= 16 && currrentPlayerInts < 18) {\n      row.cells[5].classList.add(\"notgood\");\n    } else if (currrentPlayerInts >= 18) {\n      row.cells[5].classList.add(\"bad\");\n    }\n    let currentPlayerRushAtt = Number(row.cells[6].textContent);\n    console.log(player.player_name, currentPlayerRushAtt);\n    if (currentPlayerRushAtt >= 300) {\n      row.cells[6].classList.add(\"best\");\n    } else if (currentPlayerRushAtt >= 270 && currentPlayerRushAtt < 300) {\n      row.cells[6].classList.add(\"vgood\");\n    } else if (currentPlayerRushAtt >= 240 && currentPlayerRushAtt < 270) {\n      row.cells[6].classList.add(\"pgood\");\n    } else if (currentPlayerRushAtt >= 210 && currentPlayerRushAtt < 240) {\n      row.cells[6].classList.add(\"good\");\n    } else if (currentPlayerRushAtt >= 180 && currentPlayerRushAtt < 210) {\n      row.cells[6].classList.add(\"alright\");\n    } else if (currentPlayerRushAtt >= 150 && currentPlayerRushAtt < 180) {\n      row.cells[6].classList.add(\"okay\");\n    } else if (currentPlayerRushAtt >= 100 && currentPlayerRushAtt < 150) {\n      row.cells[6].classList.add(\"notgood\");\n    } else if (currentPlayerRushAtt >= 35 && currentPlayerRushAtt < 100) {\n      row.cells[6].classList.add(\"bad\");\n    }\n    let currentPlayerRushingYds = Number(row.cells[7].textContent);\n    console.log(player.player_name, currentPlayerRushingYds);\n    if (currentPlayerRushingYds >= 1500) {\n      row.cells[7].classList.add(\"best\");\n    } else if (currentPlayerRushingYds >= 1350 && currentPlayerRushingYds < 1500) {\n      row.cells[7].classList.add(\"vgood\");\n    } else if (currentPlayerRushingYds >= 1225 && currentPlayerRushingYds < 1350) {\n      row.cells[7].classList.add(\"pgood\");\n    } else if (currentPlayerRushingYds >= 1100 && currentPlayerRushingYds < 1225) {\n      row.cells[7].classList.add(\"good\");\n    } else if (currentPlayerRushingYds >= 975 && currentPlayerRushingYds < 1100) {\n      row.cells[7].classList.add(\"alright\");\n    } else if (currentPlayerRushingYds >= 850 && currentPlayerRushingYds < 975) {\n      row.cells[7].classList.add(\"okay\");\n    } else if (currentPlayerRushingYds >= 550 && currentPlayerRushingYds < 850) {\n      row.cells[7].classList.add(\"notgood\");\n    } else if (currentPlayerRushingYds >= 250 && currentPlayerRushingYds < 550) {\n      row.cells[7].classList.add(\"bad\");\n    }\n    let currentPlayerRushingTds = Number(row.cells[8].textContent);\n    console.log(player.player_name, currentPlayerRushingTds);\n    if (currentPlayerRushingTds >= 16) {\n      row.cells[8].classList.add(\"best\");\n    } else if (currentPlayerRushingTds >= 14 && currentPlayerRushingTds < 16) {\n      row.cells[8].classList.add(\"vgood\");\n    } else if (currentPlayerRushingTds >= 12 && currentPlayerRushingTds < 14) {\n      row.cells[8].classList.add(\"pgood\");\n    } else if (currentPlayerRushingTds >= 10 && currentPlayerRushingTds < 12) {\n      row.cells[8].classList.add(\"good\");\n    } else if (currentPlayerRushingTds >= 8 && currentPlayerRushingTds < 10) {\n      row.cells[8].classList.add(\"alright\");\n    } else if (currentPlayerRushingTds >= 6 && currentPlayerRushingTds < 8) {\n      row.cells[8].classList.add(\"okay\");\n    } else if (currentPlayerRushingTds >= 4 && currentPlayerRushingTds < 6) {\n      row.cells[8].classList.add(\"notgood\");\n    } else if (currentPlayerRushingTds > 2 && currentPlayerRushingTds < 4) {\n      row.cells[8].classList.add(\"bad\");\n    }\n    let currentPlayerRec = Number(row.cells[9].textContent);\n    console.log(player.player_name, currentPlayerRec);\n    if (currentPlayerRec >= 125) {\n      row.cells[9].classList.add(\"best\");\n    } else if (currentPlayerRec >= 100 && currentPlayerRec < 125) {\n      row.cells[9].classList.add(\"vgood\");\n    } else if (currentPlayerRec >= 90 && currentPlayerRec < 100) {\n      row.cells[9].classList.add(\"pgood\");\n    } else if (currentPlayerRec >= 80 && currentPlayerRec < 90) {\n      row.cells[9].classList.add(\"good\");\n    } else if (currentPlayerRec >= 70 && currentPlayerRec < 80) {\n      row.cells[9].classList.add(\"alright\");\n    } else if (currentPlayerRec >= 55 && currentPlayerRec < 70) {\n      row.cells[9].classList.add(\"okay\");\n    } else if (currentPlayerRec >= 40 && currentPlayerRec < 55) {\n      row.cells[9].classList.add(\"notgood\");\n    } else if (currentPlayerRec >= 18 && currentPlayerRec < 40) {\n      row.cells[9].classList.add(\"bad\");\n    }\n    let currentPlayerRecYds = Number(row.cells[10].textContent);\n    console.log(player.player_name, currentPlayerRecYds);\n    if (currentPlayerRecYds >= 1500) {\n      row.cells[10].classList.add(\"best\");\n    } else if (currentPlayerRecYds >= 1250 && currentPlayerRecYds < 1500) {\n      row.cells[10].classList.add(\"vgood\");\n    } else if (currentPlayerRecYds >= 1050 && currentPlayerRecYds < 1250) {\n      row.cells[10].classList.add(\"pgood\");\n    } else if (currentPlayerRecYds >= 900 && currentPlayerRecYds < 1050) {\n      row.cells[10].classList.add(\"good\");\n    } else if (currentPlayerRecYds >= 750 && currentPlayerRecYds < 900) {\n      row.cells[10].classList.add(\"alright\");\n    } else if (currentPlayerRecYds >= 600 && currentPlayerRecYds < 750) {\n      row.cells[10].classList.add(\"okay\");\n    } else if (currentPlayerRecYds >= 450 && currentPlayerRecYds < 600) {\n      row.cells[10].classList.add(\"notgood\");\n    } else if (currentPlayerRecYds >= 200 && currentPlayerRecYds < 450) {\n      row.cells[10].classList.add(\"bad\");\n    }\n    let currentPlayerRecTds = Number(row.cells[11].textContent);\n    console.log(player.player_name, currentPlayerRecTds);\n    if (currentPlayerRecTds >= 11) {\n      row.cells[11].classList.add(\"best\");\n    } else if (currentPlayerRecTds >= 10 && currentPlayerRecTds < 11) {\n      row.cells[11].classList.add(\"vgood\");\n    } else if (currentPlayerRecTds >= 9 && currentPlayerRecTds < 10) {\n      row.cells[11].classList.add(\"pgood\");\n    } else if (currentPlayerRecTds >= 8 && currentPlayerRecTds < 9) {\n      row.cells[11].classList.add(\"good\");\n    } else if (currentPlayerRecTds >= 7 && currentPlayerRecTds < 8) {\n      row.cells[7].classList.add(\"alright\");\n    } else if (currentPlayerRecTds >= 6 && currentPlayerRecTds < 7) {\n      row.cells[11].classList.add(\"okay\");\n    } else if (currentPlayerRecTds >= 5 && currentPlayerRecTds < 6) {\n      row.cells[11].classList.add(\"notgood\");\n    } else if (currentPlayerRecTds >= 3 && currentPlayerRecTds < 5) {\n      row.cells[11].classList.add(\"bad\");\n    }\n  });\n  const container = document.getElementById('player-stats-container');\n  container.innerHTML = '';\n  container.appendChild(table);\n}\n\n//filter data by position sort by ppr\nfunction sortAndFilterByPosition(playerData, position) {\n  const validPositions = [\"RB\", \"TE\", \"QB\", \"WR\"];\n  const sortedPlayerData = playerData.filter(player => validPositions.includes(player.position)).sort((a, b) => {\n    return a.fantasy_points.ppr < b.fantasy_points.ppr ? 1 : a.fantasy_points.ppr > b.fantasy_points.ppr ? -1 : 0;\n  });\n  if (position === \"All\") {\n    return sortedPlayerData;\n  }\n  return sortedPlayerData.filter(f => f.position === position);\n}\nconst exports = {\n  topPlayerWeeklyData,\n  searchPlayerByName,\n  getPlayerNames,\n  displayPlayerStats,\n  sortAndFilterByPosition\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/filter.js\n");

/***/ }),

/***/ "./src/scripts/lineChart.js":
/*!**********************************!*\
  !*** ./src/scripts/lineChart.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lineChart\": function() { return /* binding */ lineChart; }\n/* harmony export */ });\nfunction lineChart(data, topPlayerData) {\n  const margin = {\n    top: 70,\n    right: 30,\n    bottom: 40,\n    left: 100\n  };\n  const width = 800 - margin.left - margin.right;\n  const height = 550 - margin.top - margin.bottom;\n  const x = d3.scaleLinear().range([0, width]).domain([1, 17]);\n  ;\n  const y = d3.scaleLinear().range([height, 0]).domain([-2, 55]);\n  const svg = d3.select(\"#line-chart-container\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n  const line = d3.line().x(d => x(d.week)).y(d => y(d.value));\n  svg.append(\"rect\").attr(\"width\", \"120%\").attr(\"height\", \"80%\").attr(\"fill\", \"#e6e6e8\");\n  svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"green\").attr(\"stroke-width\", 2).attr('id', 'Player').attr(\"d\", line);\n  const topPlayerLine = d3.line().x(d => x(d.week)).y(d => y(d.value));\n  svg.append(\"path\").datum(topPlayerData).attr(\"fill\", \"none\").attr('id', 'TopatPOS').attr(\"stroke\", \"black\").attr(\"stroke-width\", 2).attr(\"d\", topPlayerLine);\n  svg.append(\"text\").attr(\"transform\", `translate(${width / 2},${height + margin.bottom - 5})`).style(\"text-anchor\", \"middle\").style(\"fill\", \"grey\").attr(\"font-family\", \"Source Sans Pro\").style(\"color\", \"grey\").text(\"Week\");\n  const circles = svg.selectAll('circle').data(data).enter().append('circle').attr('class', 'Player').attr('fill', 'green').attr('stroke', 'none').attr('cx', function (d) {\n    return x(d.week);\n  }).attr('cy', function (d) {\n    return y(d.value);\n  }).attr('r', 5);\n  const topPlayerCircles = svg.selectAll('.topatPOS').data(topPlayerData).enter().append('circle').attr('class', 'TopatPOS').attr('fill', 'black').attr('stroke', 'none').attr('cx', function (d) {\n    return x(d.week);\n  }).attr('cy', function (d) {\n    return y(d.value);\n  }).attr('r', 5);\n  svg.append(\"text\").text(\"Season Stats\").attr(\"font-family\", \"Source Sans Pro\").attr(\"text-anchor\", \"middle\").style(\"fill\", \"grey\").attr(\"transform\", `translate(${margin.left + 200}, ${margin.top / 2})`).attr(\"dx\", \"1em\").attr(\"dy\", \"0.5em\").attr(\"y\", -margin.top);\n  svg.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 0 - margin.left + 10).attr(\"x\", 0 - height / 2).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").style(\"fill\", \"grey\").attr(\"font-family\", \"Source Sans Pro\").text(\"Fantasy Points\");\n  const tooltip = d3.select('#line-chart-container').append('div').attr('class', 'tooltip').style('opacity', 0);\n  circles.on('mouseover', (event, d) => {\n    d3.select(event.target).attr('r', 10);\n    let [x, y] = d3.pointer(event);\n    tooltip.transition().duration(200).style('opacity', 1.4);\n    tooltip.html(`Week: ${d.week}<br/>Pts: ${d.value}`).style('left', `${x + margin.left}px`).style('top', `${y + margin.top + 250}px`);\n  });\n  circles.on('mouseout', d => {\n    d3.select(event.target).attr('r', 6);\n    tooltip.transition().duration(500).style('opacity', 0);\n  });\n  topPlayerCircles.on('mouseover', (event, d) => {\n    d3.select(event.target).attr('r', 10);\n    let [x, y] = d3.pointer(event);\n    tooltip.transition().duration(200).style('opacity', .9);\n    tooltip.html(`Week: ${d.week}<br/>Pts: ${d.value}`).style('left', `${x + margin.left}px`).style('top', `${y + margin.top + 250}px`);\n  });\n  topPlayerCircles.on('mouseout', d => {\n    d3.select(event.target).attr('r', 6);\n    tooltip.transition().duration(500).style('opacity', 0);\n  });\n  svg.append(\"g\").attr(\"transform\", `translate(0,${height})`).call(d3.axisBottom(x));\n  svg.append(\"g\").call(d3.axisLeft(y));\n  const legend = svg.selectAll('.legend').data([{\n    color: 'green',\n    name: 'Player'\n  }, {\n    color: 'black',\n    name: 'TopatPOS'\n  }]).enter().append('g').style(\"fill\", \"grey\").attr('class', 'legend').attr('transform', (d, i) => `translate(0,${i * 20})`);\n  legend.append('line').attr('x1', width - 90).attr('x2', width - 70).attr('y1', 9).attr('y2', 9).style('stroke', d => d.color);\n  legend.append('circle').attr('cx', width - 80).attr('cy', 9).attr('r', 5).style('fill', d => d.color).on('click', (event, d) => {\n    const isActive = d.active ? false : true;\n    const newOpacity = isActive ? 0 : 1;\n    d3.select(`#${d.name}`).style('opacity', newOpacity);\n    d3.selectAll(`.${d.name}`).style('opacity', newOpacity);\n    d.active = isActive;\n  }).on('mouseover', (event, d) => {\n    tooltip.transition().duration(200).style('opacity', .9);\n    tooltip.html('Click to toggle').style('left', `${event.pageX - 300}px`).style('top', `${event.pageY}px`);\n  }).on('mouseout', () => {\n    tooltip.transition().duration(500).style('opacity', 0);\n  });\n  legend.append('text').attr('x', width - 60).attr('y', 9).attr('dy', '.35em').style('text-anchor', 'start').text(d => d.name);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/lineChart.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;